<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.youngbeen.youngService.Mapper.StockInfoMapper">
    <!--    &lt;!&ndash;TODO : 전체적으로 수정필요 &ndash;&gt;-->
    <select id="findAll"  resultType="Map">
        SELECT
        SRTNCD,
        ISINCD,
        MRKTCTG,
        ITMSNM,
        CRNO,
        CORPNM,
        BASDT
        FROM
        STOCK_INFO
    </select>

    <!-- 전체 주식 데이터 수 조회 -->
    <select id="countAll" resultType="long">
        SELECT COUNT(*) FROM STOCK_INFO
    </select>

    <!-- 페이징 처리된 전체 주식 목록 조회 - MySQL LIMIT 사용 -->
    <select id="findAllWithPaging" resultType="Map">
        SELECT
        SI.SRTNCD,
        SI.ISINCD,
        SI.MRKTCTG,
        SI.ITMSNM,
        SI.CRNO,
        SI.CORPNM,
        SI.BASDT,
        CASE
        WHEN UFS.FAVORITE_ID IS NOT NULL THEN 'true'
        ELSE 'false'
        END AS IS_FAVORITE
        FROM
        STOCK_INFO SI
        LEFT OUTER JOIN USER_FAVORITE_STOCKS UFS
        ON SI.SRTNCD = UFS.FAVORITE_ID
        and UFS.USER_ID = #{userId}
        ORDER BY SI.ITMSNM
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 즐겨찾기된 주식 목록 조회 -->
    <select id="searchStockfavorites" resultType="Map">
        SELECT
        SI.SRTNCD,
        SI.ISINCD,
        SI.MRKTCTG,
        SI.ITMSNM,
        SI.CRNO,
        SI.CORPNM,
        SI.BASDT,
        SP.CLPR,
        SP.VS,
        SP.FLTRT,
        SP.MKP,
        SP.HIPR,
        SP.LOPR,
        SP.TRQU,
        SP.TRPRC,
        SP.LSTGSTCNT,
        SP.MRKTTOTAMT
        FROM
        STOCK_INFO SI
        INNER JOIN USER_FAVORITE_STOCKS UFS
        ON SI.SRTNCD = UFS.FAVORITE_ID
        INNER JOIN STOCK_PRICE SP
        ON SI.ISINCD = SP.ISINCD
        WHERE UFS.USER_ID=#{userId}
        AND SP.BASDT = (SELECT MAX(BASDT) FROM STOCK_PRICE)
    </select>

    <!-- 키워드로 검색된 주식 데이터 수 조회 -->
    <select id="countByKeyword" parameterType="String" resultType="long">
        SELECT COUNT(*)
        FROM STOCK_INFO
        WHERE
        SRTNCD LIKE CONCAT('%', #{keyword}, '%')
        OR ITMSNM LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 페이징 처리된 키워드 검색 결과 조회 - MySQL LIMIT 사용 -->
    <select id="findByKeywordWithPaging" resultType="Map">
        SELECT
        SI.SRTNCD,
        SI.ISINCD,
        SI.MRKTCTG,
        SI.ITMSNM,
        SI.CRNO,
        SI.CORPNM,
        SI.BASDT,
        CASE
        WHEN UFS.FAVORITE_ID IS NOT NULL THEN 'true'
        ELSE 'false'
        END AS IS_FAVORITE
        FROM
        STOCK_INFO SI
        LEFT OUTER JOIN USER_FAVORITE_STOCKS UFS
        ON SI.SRTNCD = UFS.FAVORITE_ID
        AND UFS.USER_ID=#{userId}
        WHERE
        SI.SRTNCD LIKE CONCAT('%', #{keyword}, '%')
        OR SI.ITMSNM LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY SI.ITMSNM
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- MySQL DATE_FORMAT 사용 -->
    <select id="findByStockCode"  parameterType="Map" resultType="Map">
        SELECT
        SI.SRTNCD,
        SI.ISINCD,
        SI.MRKTCTG,
        SI.ITMSNM,
        SI.CRNO,
        SI.CORPNM,
        DATE_FORMAT(SP.BASDT, '%Y-%m-%d') AS BASDT,
        SP.CLPR,
        SP.VS,
        SP.FLTRT,
        SP.MKP,
        SP.HIPR,
        SP.LOPR,
        SP.TRQU,
        SP.TRPRC,
        SP.LSTGSTCNT,
        SP.MRKTTOTAMT
        FROM
        STOCK_INFO SI
        INNER JOIN STOCK_PRICE SP
        ON SI.ISINCD = SP.ISINCD
        WHERE
        (SI.SRTNCD LIKE CONCAT('%', #{keyword}, '%')
        OR SI.ITMSNM LIKE CONCAT('%', #{keyword}, '%'))
        AND SP.BASDT = #{basedt}
    </select>

    <select id="searchStockDetails" parameterType="map" resultType="map">
        SELECT
        SI.SRTNCD,
        SI.ISINCD,
        SI.MRKTCTG,
        SI.ITMSNM,
        SI.CRNO,
        SI.CORPNM,
        SP.BASDT,
        SP.CLPR,
        SP.VS,
        SP.FLTRT,
        SP.MKP,
        SP.HIPR,
        SP.LOPR,
        SP.TRQU,
        SP.TRPRC,
        SP.LSTGSTCNT,
        SP.MRKTTOTAMT
        FROM
        STOCK_INFO SI
        INNER JOIN STOCK_PRICE SP
        ON SI.ISINCD = SP.ISINCD
        <where>
            <!-- stockCode 조건: 값이 있을 때만 LIKE 조건 적용 -->
            <if test="stockCode != null and stockCode != ''">
                AND SI.SRTNCD LIKE CONCAT('%', #{stockCode}, '%')
            </if>
            <!-- stockName 조건: 값이 있을 때만 두 컬럼에 대해 LIKE 조건 적용 -->
            <if test="stockName != null and stockName != ''">
                AND (
                SI.ISINCD LIKE CONCAT('%', #{stockName}, '%')
                OR SI.ITMSNM LIKE CONCAT('%', #{stockName}, '%')
                )
            </if>
            <!-- marketType 조건: 값이 있을 때만 등치 조건 적용 -->
            <if test="marketType != null and marketType != ''">
                AND SI.MRKTCTG = #{marketType}
            </if>
            <!-- startDate 조건: 값이 있을 때만 시작일 조건 적용 -->
            <if test="startDate != null and startDate != ''">
                AND SP.BASDT &gt;= #{startDate}
            </if>
            <!-- endDate 조건: 값이 있을 때만 종료일 조건 적용 -->
            <if test="endDate != null and endDate != ''">
                AND SP.BASDT &lt;= #{endDate}
            </if>
            <!-- sector 조건: 값이 있을 때만 등치 조건 적용 -->
            <if test="sector != null and sector != ''">
                AND SI.CORPNM = #{sector}
            </if>
        </where>
    </select>

    <!-- 상세 검색 조건으로 검색된 주식 데이터 수 조회 -->
    <select id="countStockDetailsWithConditions" parameterType="map" resultType="long">
        SELECT COUNT(*)
        FROM
        STOCK_INFO SI
        INNER JOIN STOCK_PRICE SP
        ON SI.ISINCD = SP.ISINCD
        <where>
            <!-- stockCode 조건: 값이 있을 때만 LIKE 조건 적용 -->
            <if test="stockCode != null and stockCode != ''">
                AND SI.SRTNCD LIKE CONCAT('%', #{stockCode}, '%')
            </if>
            <!-- stockName 조건: 값이 있을 때만 두 컬럼에 대해 LIKE 조건 적용 -->
            <if test="stockName != null and stockName != ''">
                AND (
                SI.ISINCD LIKE CONCAT('%', #{stockName}, '%')
                OR SI.ITMSNM LIKE CONCAT('%', #{stockName}, '%')
                )
            </if>
            <!-- marketType 조건: 값이 있을 때만 등치 조건 적용 -->
            <if test="marketType != null and marketType != ''">
                AND SI.MRKTCTG = #{marketType}
            </if>
            <!-- startDate 조건: 값이 있을 때만 시작일 조건 적용 -->
            <if test="startDate != null and startDate != ''">
                AND SP.BASDT &gt;= #{startDate}
            </if>
            <!-- endDate 조건: 값이 있을 때만 종료일 조건 적용 -->
            <if test="endDate != null and endDate != ''">
                AND SP.BASDT &lt;= #{endDate}
            </if>
            <!-- sector 조건: 값이 있을 때만 등치 조건 적용 -->
            <if test="sector != null and sector != ''">
                AND SI.CORPNM = #{sector}
            </if>
        </where>
    </select>

    <!-- 페이징 처리된 상세 검색 결과 조회 - MySQL LIMIT 사용 -->
    <select id="searchStockDetailsWithPaging" parameterType="map" resultType="map">
        SELECT
        SI.SRTNCD,
        SI.ISINCD,
        SI.MRKTCTG,
        SI.ITMSNM,
        SI.CRNO,
        SI.CORPNM,
        DATE_FORMAT(SP.BASDT,'%Y-%m-%d') as BASDT,
        SP.CLPR,
        SP.VS,
        SP.FLTRT,
        SP.MKP,
        SP.HIPR,
        SP.LOPR,
        SP.TRQU,
        SP.TRPRC,
        SP.LSTGSTCNT,
        SP.MRKTTOTAMT
        FROM
        STOCK_INFO SI
        INNER JOIN STOCK_PRICE SP ON SI.ISINCD = SP.ISINCD
        <where>
            <if test="stockCode != null and stockCode != ''">
                AND SI.SRTNCD LIKE CONCAT('%', #{stockCode}, '%')
            </if>
            <if test="stockName != null and stockName != ''">
                AND (
                SI.ISINCD LIKE CONCAT('%', #{stockName}, '%')
                OR SI.ITMSNM LIKE CONCAT('%', #{stockName}, '%')
                )
            </if>
            <if test="marketType != null and marketType != ''">
                AND SI.MRKTCTG = #{marketType}
            </if>
            <if test="startDate != null and startDate != ''">
                AND SP.BASDT &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND SP.BASDT &lt;= #{endDate}
            </if>
            <if test="sector != null and sector != ''">
                AND SI.CORPNM = #{sector}
            </if>
        </where>
        ORDER BY SP.BASDT DESC, SI.ITMSNM
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 주식 성과 비교 검색 결과 조회 - MySQL STR_TO_DATE 사용 -->
    <select id="selcetPerformance" parameterType="map" resultType="map">
        SELECT
            SI.CORPNM AS COMPANY_NAME,
            SI.SRTNCD AS STOCK_CODE,
            SI.MRKTCTG AS MARKET_CATEGORY,
            FIRST_DAY.BASDT AS START_DATE,
            FIRST_DAY.CLPR AS START_PRICE,
            LAST_DAY.BASDT AS END_DATE,
            LAST_DAY.CLPR AS END_PRICE,
            ROUND((LAST_DAY.CLPR - FIRST_DAY.CLPR) / FIRST_DAY.CLPR * 100, 2) AS PRICE_CHANGE_PCT
        FROM STOCK_INFO SI
        INNER JOIN (
            -- 먼저 MIN/MAX 날짜를 구한 후
            SELECT
                sp1.ISINCD,
                sp1.BASDT,
                sp1.CLPR
            FROM STOCK_PRICE sp1
            INNER JOIN (
                SELECT
                    ISINCD,
                    MIN(BASDT) as min_date
                FROM STOCK_PRICE
                WHERE BASDT BETWEEN STR_TO_DATE(#{startDate}, '%Y-%m-%d')
                    AND STR_TO_DATE(#{endDate}, '%Y-%m-%d')
                GROUP BY ISINCD
                ) min_dates ON sp1.ISINCD = min_dates.ISINCD
                            AND sp1.BASDT = min_dates.min_date
            ) FIRST_DAY ON SI.ISINCD = FIRST_DAY.ISINCD
        INNER JOIN (
            SELECT
                sp1.ISINCD,
                sp1.BASDT,
                sp1.CLPR
            FROM STOCK_PRICE sp1
            INNER JOIN (
                SELECT
                    ISINCD,
                    MAX(BASDT) as max_date
                FROM STOCK_PRICE
                WHERE BASDT BETWEEN STR_TO_DATE(#{startDate}, '%Y-%m-%d')
                    AND STR_TO_DATE(#{endDate}, '%Y-%m-%d')
                GROUP BY ISINCD
                ) max_dates ON sp1.ISINCD = max_dates.ISINCD
                            AND sp1.BASDT = max_dates.max_date
            ) LAST_DAY ON SI.ISINCD = LAST_DAY.ISINCD
        WHERE 1=1
        <if test="marketType != null and marketType != 'ALL'">
            AND SI.MRKTCTG = #{marketType}
        </if>
        ORDER BY PRICE_CHANGE_PCT DESC
    </select>

    <select id="countByMarketType"  parameterType="String" resultType="Long">
        SELECT COUNT(1) AS CNT
        FROM STOCK_INFO
        WHERE MRKTCTG = #{MRKTCTG}
    </select>

    <!-- MySQL NOW() 함수 사용 -->
    <insert id="addFavoriteStock" parameterType="Map">
        INSERT INTO USER_FAVORITE_STOCKS (
        FAVORITE_ID,
        USER_ID,
        ADD_DATE
        ) VALUES (
        #{srtnCd},
        #{userId},
        DATE_FORMAT(NOW(), '%Y-%m-%d'))
    </insert>

    <delete id="deleteFavoriteStock" parameterType="Map">
        DELETE FROM USER_FAVORITE_STOCKS
        WHERE
        FAVORITE_ID = #{srtnCd}
        AND USER_ID = #{userId}
    </delete>

    <!-- 🔥 모든 REMARKS를 NULL로 초기화 -->
    <update id="resetAllRemarksToNull">
        UPDATE STOCK_PRICE
        SET REMARKS = NULL
        WHERE REMARKS IS NOT NULL
    </update>

    <!-- 🔥 배치 단위로 REMARKS를 NULL로 초기화 (MySQL 기준) -->
    <update id="resetRemarksBatch">
        UPDATE STOCK_PRICE
        SET REMARKS = NULL
        WHERE REMARKS IS NOT NULL
        LIMIT #{batchSize}
    </update>

    <!-- Oracle인 경우 ROWNUM 사용 -->
    <update id="resetRemarksBatchOracle">
        UPDATE STOCK_PRICE
        SET REMARKS = NULL
        WHERE ROWID IN (
        SELECT ROWID
        FROM STOCK_PRICE
        WHERE REMARKS IS NOT NULL
        AND ROWNUM &lt;= #{batchSize}
        )
    </update>

    <!-- 더 정교한 배치 처리 (ID 기반) -->
    <update id="resetRemarksBatchWithId">
        UPDATE STOCK_PRICE
        SET REMARKS = NULL
        WHERE REMARKS IS NOT NULL
        AND ID BETWEEN #{startId} AND #{endId}
    </update>

</mapper>